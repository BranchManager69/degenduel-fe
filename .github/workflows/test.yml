name: DegenDuel CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Run type checking
      run: npm run type-check
      continue-on-error: true
      
    - name: Run tests
      run: npm test
      continue-on-error: true
      
    - name: Generate coverage report
      run: npm test -- --coverage
      continue-on-error: true
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./coverage/
        fail_ci_if_error: false
      continue-on-error: true

  build-dev:
    name: Development Build
    runs-on: ubuntu-latest
    environment: "development (dev.degenduel.me)"
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Build development version
      run: npm run build:dev
      
    - name: Verify build output
      run: |
        if [ -d "dist-dev" ] && [ "$(find dist-dev -type f | wc -l)" -gt 0 ]; then
          echo "✅ Development build successful!"
        else
          echo "❌ Development build failed!"
          exit 1
        fi
        
    - name: Upload development build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist-dev
        path: dist-dev
        retention-days: 7
        
    - name: Create GitHub deployment for development
      uses: chrnorm/deployment-action@v2
      id: deployment-dev
      with:
        token: ${{ github.token }}
        environment-url: https://dev.degenduel.me
        environment: "development (dev.degenduel.me)"
        
    - name: Mark development deployment as successful
      uses: chrnorm/deployment-status@v2
      with:
        token: ${{ github.token }}
        state: success
        deployment-id: ${{ steps.deployment-dev.outputs.deployment_id }}

  build-prod:
    name: Production Build
    runs-on: ubuntu-latest
    environment: "production (degenduel.me)"
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Build production version
      run: npm run build:prod
      
    - name: Verify build output
      run: |
        if [ -d "dist" ] && [ "$(find dist -type f | wc -l)" -gt 0 ]; then
          echo "✅ Production build successful!"
        else
          echo "❌ Production build failed!"
          exit 1
        fi
        
    - name: Upload production build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist-prod
        path: dist
        retention-days: 7
        
    - name: Create GitHub deployment for production
      uses: chrnorm/deployment-action@v2
      id: deployment-prod
      with:
        token: ${{ github.token }}
        environment-url: https://degenduel.me
        environment: "production (degenduel.me)"
        
    - name: Mark production deployment as successful
      uses: chrnorm/deployment-status@v2
      with:
        token: ${{ github.token }}
        state: success
        deployment-id: ${{ steps.deployment-prod.outputs.deployment_id }}